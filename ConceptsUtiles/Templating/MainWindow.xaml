<Window
        xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
        xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
		xmlns:vm="clr-namespace:Templating.ViewModel"
        xmlns:d="http://schemas.microsoft.com/expression/blend/2008" xmlns:mc="http://schemas.openxmlformats.org/markup-compatibility/2006" xmlns:ed="http://schemas.microsoft.com/expression/2010/drawing" mc:Ignorable="d" x:Class="Templating.MainWindow"
        Title="MainWindow" Height="424" Width="525">
	<Window.Resources>
		<SolidColorBrush x:Key="TextBox.Static.Border" Color="#FFABAdB3"/>
		<SolidColorBrush x:Key="TextBox.MouseOver.Border" Color="#FF7EB4EA"/>
		<SolidColorBrush x:Key="TextBox.Focus.Border" Color="#FF569DE5"/>
		<Style x:Key="TextBoxStyle2" TargetType="{x:Type TextBox}">
			<Setter Property="Background" Value="{DynamicResource {x:Static SystemColors.WindowBrushKey}}"/>
			<Setter Property="BorderBrush" Value="{StaticResource TextBox.Static.Border}"/>
			<Setter Property="Foreground" Value="{DynamicResource {x:Static SystemColors.ControlTextBrushKey}}"/>
			<Setter Property="BorderThickness" Value="1"/>
			<Setter Property="KeyboardNavigation.TabNavigation" Value="None"/>
			<Setter Property="HorizontalContentAlignment" Value="Left"/>
			<Setter Property="FocusVisualStyle" Value="{x:Null}"/>
			<Setter Property="AllowDrop" Value="true"/>
			<Setter Property="ScrollViewer.PanningMode" Value="VerticalFirst"/>
			<Setter Property="Stylus.IsFlicksEnabled" Value="False"/>
			<Setter Property="Template">
				<Setter.Value>
					<ControlTemplate TargetType="{x:Type TextBox}">
						<Border x:Name="border" BorderBrush="{TemplateBinding BorderBrush}" BorderThickness="{TemplateBinding BorderThickness}" Background="{TemplateBinding Background}" SnapsToDevicePixels="True">
							<ScrollViewer x:Name="PART_ContentHost" Focusable="false" HorizontalScrollBarVisibility="Hidden" VerticalScrollBarVisibility="Hidden"/>
						</Border>
						<ControlTemplate.Triggers>
							<Trigger Property="IsEnabled" Value="false">
								<Setter Property="Opacity" TargetName="border" Value="0.56"/>
							</Trigger>
							<Trigger Property="IsMouseOver" Value="true">
								<Setter Property="BorderBrush" TargetName="border" Value="{StaticResource TextBox.MouseOver.Border}"/>
							</Trigger>
							<Trigger Property="IsKeyboardFocused" Value="true">
								<Setter Property="BorderBrush" TargetName="border" Value="{StaticResource TextBox.Focus.Border}"/>
							</Trigger>
						</ControlTemplate.Triggers>
					</ControlTemplate>
				</Setter.Value>
			</Setter>
			<Style.Triggers>
				<MultiTrigger>
					<MultiTrigger.Conditions>
						<Condition Property="IsInactiveSelectionHighlightEnabled" Value="true"/>
						<Condition Property="IsSelectionActive" Value="false"/>
					</MultiTrigger.Conditions>
					<Setter Property="SelectionBrush" Value="{DynamicResource {x:Static SystemColors.InactiveSelectionHighlightBrushKey}}"/>
				</MultiTrigger>
			</Style.Triggers>
		</Style>
	</Window.Resources>
	<Grid DataContext="{Binding Source={StaticResource Locator}}">
		<Grid.RowDefinitions>
			<RowDefinition Height="Auto"/>
			<RowDefinition Height="*"/>
			<RowDefinition Height="*"/>
			<RowDefinition Height="*"/>
			<RowDefinition Height="Auto"/>
		</Grid.RowDefinitions>
		<StackPanel HorizontalAlignment="Center" VerticalAlignment="Center" Grid.Row="1">
			<RadioButton Content="Bouton d'option (RadioButton) avec template" HorizontalAlignment="Center" VerticalAlignment="Center" Style="{DynamicResource RadioButtonStyle1}" IsChecked="True" Foreground="Black" BorderBrush="Black" GroupName="A" Margin="0,0,0,10">
				<RadioButton.Resources>
					<Style x:Key="FocusVisual">
						<Setter Property="Control.Template">
							<Setter.Value>
								<ControlTemplate>
									<Rectangle Margin="2" SnapsToDevicePixels="true" Stroke="{DynamicResource {x:Static SystemColors.ControlTextBrushKey}}" StrokeThickness="1" StrokeDashArray="1 2"/>
								</ControlTemplate>
							</Setter.Value>
						</Setter>
					</Style>
					<SolidColorBrush x:Key="RadioButton.Static.Background" Color="#FFFFFFFF"/>
					<SolidColorBrush x:Key="RadioButton.Static.Border" Color="#FF707070"/>
					<Style x:Key="OptionMarkFocusVisual">
						<Setter Property="Control.Template">
							<Setter.Value>
								<ControlTemplate>
									<Rectangle Margin="14,0,0,0" SnapsToDevicePixels="true" Stroke="{DynamicResource {x:Static SystemColors.ControlTextBrushKey}}" StrokeThickness="1" StrokeDashArray="1 2"/>
								</ControlTemplate>
							</Setter.Value>
						</Setter>
					</Style>
					<SolidColorBrush x:Key="RadioButton.MouseOver.Background" Color="#FFF3F9FF"/>
					<SolidColorBrush x:Key="RadioButton.MouseOver.Border" Color="#FF5593FF"/>
					<SolidColorBrush x:Key="RadioButton.MouseOver.Glyph" Color="#FF212121"/>
					<SolidColorBrush x:Key="RadioButton.Disabled.Background" Color="#FFE6E6E6"/>
					<SolidColorBrush x:Key="RadioButton.Disabled.Border" Color="#FFBCBCBC"/>
					<SolidColorBrush x:Key="RadioButton.Disabled.Glyph" Color="#FF707070"/>
					<SolidColorBrush x:Key="RadioButton.Pressed.Background" Color="#FFD9ECFF"/>
					<SolidColorBrush x:Key="RadioButton.Pressed.Border" Color="#FF3C77DD"/>
					<SolidColorBrush x:Key="RadioButton.Pressed.Glyph" Color="#FF212121"/>
					<SolidColorBrush x:Key="RadioButton.Static.Glyph" Color="#FF212121"/>
					<Style x:Key="RadioButtonStyle1" TargetType="{x:Type RadioButton}">
						<Setter Property="FocusVisualStyle" Value="{StaticResource FocusVisual}"/>
						<Setter Property="Background" Value="{StaticResource RadioButton.Static.Background}"/>
						<Setter Property="BorderBrush" Value="{StaticResource RadioButton.Static.Border}"/>
						<Setter Property="Foreground" Value="{DynamicResource {x:Static SystemColors.ControlTextBrushKey}}"/>
						<Setter Property="BorderThickness" Value="1"/>
						<Setter Property="Template">
							<Setter.Value>
								<ControlTemplate TargetType="{x:Type RadioButton}">
									<Grid x:Name="templateRoot" Background="Transparent" SnapsToDevicePixels="True">
										<Grid.ColumnDefinitions>
											<ColumnDefinition Width="Auto"/>
											<ColumnDefinition Width="*"/>
										</Grid.ColumnDefinitions>
										<Border x:Name="radioButtonBorder" BorderBrush="{TemplateBinding BorderBrush}" BorderThickness="{TemplateBinding BorderThickness}" Background="{TemplateBinding Background}" CornerRadius="0" HorizontalAlignment="{TemplateBinding HorizontalContentAlignment}" Margin="1,1,2,1" VerticalAlignment="{TemplateBinding VerticalContentAlignment}" RenderTransformOrigin="0.5,0.5">
											<Border.RenderTransform>
												<TransformGroup>
													<ScaleTransform/>
													<SkewTransform/>
													<RotateTransform Angle="45"/>
													<TranslateTransform/>
												</TransformGroup>
											</Border.RenderTransform>
											<Grid x:Name="markGrid" Margin="2">
												<Rectangle x:Name="optionMark" Fill="{StaticResource RadioButton.Static.Glyph}" MinWidth="6" MinHeight="6" Opacity="0"/>
											</Grid>
										</Border>
										<ContentPresenter x:Name="contentPresenter" Grid.Column="1" Focusable="False" HorizontalAlignment="{TemplateBinding HorizontalContentAlignment}" Margin="{TemplateBinding Padding}" RecognizesAccessKey="True" SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}" VerticalAlignment="{TemplateBinding VerticalContentAlignment}"/>
									</Grid>
									<ControlTemplate.Triggers>
										<Trigger Property="HasContent" Value="true">
											<Setter Property="FocusVisualStyle" Value="{StaticResource OptionMarkFocusVisual}"/>
											<Setter Property="Padding" Value="4,-1,0,0"/>
										</Trigger>
										<Trigger Property="IsMouseOver" Value="true">
											<Setter Property="Background" TargetName="radioButtonBorder" Value="{StaticResource RadioButton.MouseOver.Background}"/>
											<Setter Property="BorderBrush" TargetName="radioButtonBorder" Value="{StaticResource RadioButton.MouseOver.Border}"/>
											<Setter Property="Fill" TargetName="optionMark" Value="{StaticResource RadioButton.MouseOver.Glyph}"/>
										</Trigger>
										<Trigger Property="IsEnabled" Value="false">
											<Setter Property="Background" TargetName="radioButtonBorder" Value="{StaticResource RadioButton.Disabled.Background}"/>
											<Setter Property="BorderBrush" TargetName="radioButtonBorder" Value="{StaticResource RadioButton.Disabled.Border}"/>
											<Setter Property="Fill" TargetName="optionMark" Value="{StaticResource RadioButton.Disabled.Glyph}"/>
										</Trigger>
										<Trigger Property="IsPressed" Value="true">
											<Setter Property="Background" TargetName="radioButtonBorder" Value="{StaticResource RadioButton.Pressed.Background}"/>
											<Setter Property="BorderBrush" TargetName="radioButtonBorder" Value="{StaticResource RadioButton.Pressed.Border}"/>
											<Setter Property="Fill" TargetName="optionMark" Value="{StaticResource RadioButton.Pressed.Glyph}"/>
										</Trigger>
										<Trigger Property="IsChecked" Value="true">
											<Setter Property="Opacity" TargetName="optionMark" Value="1"/>
										</Trigger>
										<Trigger Property="IsChecked" Value="{x:Null}">
											<Setter Property="Opacity" TargetName="optionMark" Value="0.56"/>
										</Trigger>
									</ControlTemplate.Triggers>
								</ControlTemplate>
							</Setter.Value>
						</Setter>
					</Style>
				</RadioButton.Resources>
			</RadioButton>
			<RadioButton Content="Bouton d'option (RadioButton) sans template" HorizontalAlignment="Center" VerticalAlignment="Center" IsChecked="True" Foreground="Black" BorderBrush="Black" GroupName="B">
				<RadioButton.Resources>
					<Style x:Key="FocusVisual">
						<Setter Property="Control.Template">
							<Setter.Value>
								<ControlTemplate>
									<Rectangle Margin="2" SnapsToDevicePixels="true" Stroke="{DynamicResource {x:Static SystemColors.ControlTextBrushKey}}" StrokeThickness="1" StrokeDashArray="1 2"/>
								</ControlTemplate>
							</Setter.Value>
						</Setter>
					</Style>
					<SolidColorBrush x:Key="RadioButton.Static.Background" Color="#FFFFFFFF"/>
					<SolidColorBrush x:Key="RadioButton.Static.Border" Color="#FF707070"/>
					<Style x:Key="OptionMarkFocusVisual">
						<Setter Property="Control.Template">
							<Setter.Value>
								<ControlTemplate>
									<Rectangle Margin="14,0,0,0" SnapsToDevicePixels="true" Stroke="{DynamicResource {x:Static SystemColors.ControlTextBrushKey}}" StrokeThickness="1" StrokeDashArray="1 2"/>
								</ControlTemplate>
							</Setter.Value>
						</Setter>
					</Style>
					<SolidColorBrush x:Key="RadioButton.MouseOver.Background" Color="#FFF3F9FF"/>
					<SolidColorBrush x:Key="RadioButton.MouseOver.Border" Color="#FF5593FF"/>
					<SolidColorBrush x:Key="RadioButton.MouseOver.Glyph" Color="#FF212121"/>
					<SolidColorBrush x:Key="RadioButton.Disabled.Background" Color="#FFE6E6E6"/>
					<SolidColorBrush x:Key="RadioButton.Disabled.Border" Color="#FFBCBCBC"/>
					<SolidColorBrush x:Key="RadioButton.Disabled.Glyph" Color="#FF707070"/>
					<SolidColorBrush x:Key="RadioButton.Pressed.Background" Color="#FFD9ECFF"/>
					<SolidColorBrush x:Key="RadioButton.Pressed.Border" Color="#FF3C77DD"/>
					<SolidColorBrush x:Key="RadioButton.Pressed.Glyph" Color="#FF212121"/>
					<SolidColorBrush x:Key="RadioButton.Static.Glyph" Color="#FF212121"/>
					<Style x:Key="RadioButtonStyle1" TargetType="{x:Type RadioButton}">
						<Setter Property="FocusVisualStyle" Value="{StaticResource FocusVisual}"/>
						<Setter Property="Background" Value="{StaticResource RadioButton.Static.Background}"/>
						<Setter Property="BorderBrush" Value="{StaticResource RadioButton.Static.Border}"/>
						<Setter Property="Foreground" Value="{DynamicResource {x:Static SystemColors.ControlTextBrushKey}}"/>
						<Setter Property="BorderThickness" Value="1"/>
						<Setter Property="Template">
							<Setter.Value>
								<ControlTemplate TargetType="{x:Type RadioButton}">
									<Grid x:Name="templateRoot" Background="Transparent" SnapsToDevicePixels="True">
										<Grid.ColumnDefinitions>
											<ColumnDefinition Width="Auto"/>
											<ColumnDefinition Width="*"/>
										</Grid.ColumnDefinitions>
										<Border x:Name="radioButtonBorder" BorderBrush="{TemplateBinding BorderBrush}" BorderThickness="{TemplateBinding BorderThickness}" Background="{TemplateBinding Background}" CornerRadius="0" HorizontalAlignment="{TemplateBinding HorizontalContentAlignment}" Margin="1,1,2,1" VerticalAlignment="{TemplateBinding VerticalContentAlignment}">
											<Grid x:Name="markGrid" Margin="2">
												<Rectangle x:Name="optionMark" Fill="{StaticResource RadioButton.Static.Glyph}" MinWidth="6" MinHeight="6" Opacity="0"/>
											</Grid>
										</Border>
										<ContentPresenter x:Name="contentPresenter" Grid.Column="1" Focusable="False" HorizontalAlignment="{TemplateBinding HorizontalContentAlignment}" Margin="{TemplateBinding Padding}" RecognizesAccessKey="True" SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}" VerticalAlignment="{TemplateBinding VerticalContentAlignment}"/>
									</Grid>
									<ControlTemplate.Triggers>
										<Trigger Property="HasContent" Value="true">
											<Setter Property="FocusVisualStyle" Value="{StaticResource OptionMarkFocusVisual}"/>
											<Setter Property="Padding" Value="4,-1,0,0"/>
										</Trigger>
										<Trigger Property="IsMouseOver" Value="true">
											<Setter Property="Background" TargetName="radioButtonBorder" Value="{StaticResource RadioButton.MouseOver.Background}"/>
											<Setter Property="BorderBrush" TargetName="radioButtonBorder" Value="{StaticResource RadioButton.MouseOver.Border}"/>
											<Setter Property="Fill" TargetName="optionMark" Value="{StaticResource RadioButton.MouseOver.Glyph}"/>
										</Trigger>
										<Trigger Property="IsEnabled" Value="false">
											<Setter Property="Background" TargetName="radioButtonBorder" Value="{StaticResource RadioButton.Disabled.Background}"/>
											<Setter Property="BorderBrush" TargetName="radioButtonBorder" Value="{StaticResource RadioButton.Disabled.Border}"/>
											<Setter Property="Fill" TargetName="optionMark" Value="{StaticResource RadioButton.Disabled.Glyph}"/>
										</Trigger>
										<Trigger Property="IsPressed" Value="true">
											<Setter Property="Background" TargetName="radioButtonBorder" Value="{StaticResource RadioButton.Pressed.Background}"/>
											<Setter Property="BorderBrush" TargetName="radioButtonBorder" Value="{StaticResource RadioButton.Pressed.Border}"/>
											<Setter Property="Fill" TargetName="optionMark" Value="{StaticResource RadioButton.Pressed.Glyph}"/>
										</Trigger>
										<Trigger Property="IsChecked" Value="true">
											<Setter Property="Opacity" TargetName="optionMark" Value="1"/>
										</Trigger>
										<Trigger Property="IsChecked" Value="{x:Null}">
											<Setter Property="Opacity" TargetName="optionMark" Value="0.56"/>
										</Trigger>
									</ControlTemplate.Triggers>
								</ControlTemplate>
							</Setter.Value>
						</Setter>
					</Style>
				</RadioButton.Resources>
			</RadioButton>
		</StackPanel>
		<StackPanel HorizontalAlignment="Center" VerticalAlignment="Center" Grid.Row="2">
			<StackPanel HorizontalAlignment="Center" VerticalAlignment="Center" Orientation="Horizontal" Margin="0,0,0,10">
				<TextBox HorizontalAlignment="Center" Height="23" TextWrapping="Wrap" Text="125.2" VerticalAlignment="Center" Width="120" Style="{DynamicResource TextBoxStyle1}">
					<TextBox.Resources>
						<SolidColorBrush x:Key="TextBox.Static.Border" Color="#FFABAdB3"/>
						<SolidColorBrush x:Key="TextBox.MouseOver.Border" Color="#FF7EB4EA"/>
						<SolidColorBrush x:Key="TextBox.Focus.Border" Color="#FF569DE5"/>
						<Style x:Key="TextBoxStyle1" TargetType="{x:Type TextBox}">
							<Setter Property="Background" Value="{DynamicResource {x:Static SystemColors.WindowBrushKey}}"/>
							<Setter Property="BorderBrush" Value="{StaticResource TextBox.Static.Border}"/>
							<Setter Property="Foreground" Value="{DynamicResource {x:Static SystemColors.ControlTextBrushKey}}"/>
							<Setter Property="BorderThickness" Value="1"/>
							<Setter Property="KeyboardNavigation.TabNavigation" Value="None"/>
							<Setter Property="HorizontalContentAlignment" Value="Left"/>
							<Setter Property="FocusVisualStyle" Value="{x:Null}"/>
							<Setter Property="AllowDrop" Value="true"/>
							<Setter Property="ScrollViewer.PanningMode" Value="VerticalFirst"/>
							<Setter Property="Stylus.IsFlicksEnabled" Value="False"/>
							<Setter Property="Template">
								<Setter.Value>
									<ControlTemplate TargetType="{x:Type TextBox}">
										<Border x:Name="border" BorderBrush="{TemplateBinding BorderBrush}" BorderThickness="{TemplateBinding BorderThickness}" Background="{TemplateBinding Background}" SnapsToDevicePixels="True">
											<Grid>									
												<ScrollViewer x:Name="PART_ContentHost" Focusable="false" HorizontalScrollBarVisibility="Hidden" VerticalScrollBarVisibility="Hidden" Margin="0,0,10,0" VerticalAlignment="Center"/>
												<TextBlock HorizontalAlignment="Right" TextWrapping="Wrap" VerticalAlignment="Center"><Run Language="fr-fr" Text="%"/></TextBlock>
											</Grid>
										</Border>
										<ControlTemplate.Triggers>
											<Trigger Property="IsEnabled" Value="false">
												<Setter Property="Opacity" TargetName="border" Value="0.56"/>
											</Trigger>
											<Trigger Property="IsMouseOver" Value="true">
												<Setter Property="BorderBrush" TargetName="border" Value="{StaticResource TextBox.MouseOver.Border}"/>
											</Trigger>
											<Trigger Property="IsKeyboardFocused" Value="true">
												<Setter Property="BorderBrush" TargetName="border" Value="{StaticResource TextBox.Focus.Border}"/>
											</Trigger>
										</ControlTemplate.Triggers>
									</ControlTemplate>
								</Setter.Value>
							</Setter>
							<Style.Triggers>
								<MultiTrigger>
									<MultiTrigger.Conditions>
										<Condition Property="IsInactiveSelectionHighlightEnabled" Value="true"/>
										<Condition Property="IsSelectionActive" Value="false"/>
									</MultiTrigger.Conditions>
									<Setter Property="SelectionBrush" Value="{DynamicResource {x:Static SystemColors.InactiveSelectionHighlightBrushKey}}"/>
								</MultiTrigger>
							</Style.Triggers>
						</Style>
					</TextBox.Resources>
				</TextBox>
				<TextBlock HorizontalAlignment="Center" TextWrapping="Wrap" Text="Zone de texte (TextBox) avec template" VerticalAlignment="Center" Margin="8,0"/>
			</StackPanel>
			<StackPanel HorizontalAlignment="Center" VerticalAlignment="Center" Orientation="Horizontal">
				<TextBox HorizontalAlignment="Center" Height="23" TextWrapping="Wrap" Text="125.2" VerticalAlignment="Center" Width="120" Style="{DynamicResource TextBoxStyle2}">
					<TextBox.Resources>
						<SolidColorBrush x:Key="TextBox.Static.Border" Color="#FFABAdB3"/>
						<SolidColorBrush x:Key="TextBox.MouseOver.Border" Color="#FF7EB4EA"/>
						<SolidColorBrush x:Key="TextBox.Focus.Border" Color="#FF569DE5"/>
						<Style x:Key="TextBoxStyle1" TargetType="{x:Type TextBox}">
							<Setter Property="Background" Value="{DynamicResource {x:Static SystemColors.WindowBrushKey}}"/>
							<Setter Property="BorderBrush" Value="{StaticResource TextBox.Static.Border}"/>
							<Setter Property="Foreground" Value="{DynamicResource {x:Static SystemColors.ControlTextBrushKey}}"/>
							<Setter Property="BorderThickness" Value="1"/>
							<Setter Property="KeyboardNavigation.TabNavigation" Value="None"/>
							<Setter Property="HorizontalContentAlignment" Value="Left"/>
							<Setter Property="FocusVisualStyle" Value="{x:Null}"/>
							<Setter Property="AllowDrop" Value="true"/>
							<Setter Property="ScrollViewer.PanningMode" Value="VerticalFirst"/>
							<Setter Property="Stylus.IsFlicksEnabled" Value="False"/>
							<Setter Property="Template">
								<Setter.Value>
									<ControlTemplate TargetType="{x:Type TextBox}">
										<Border x:Name="border" BorderBrush="{TemplateBinding BorderBrush}" BorderThickness="{TemplateBinding BorderThickness}" Background="{TemplateBinding Background}" SnapsToDevicePixels="True">
											<Grid>									
												<ScrollViewer x:Name="PART_ContentHost" Focusable="false" HorizontalScrollBarVisibility="Hidden" VerticalScrollBarVisibility="Hidden" Margin="0,0,10,0" VerticalAlignment="Center"/>
												<TextBlock HorizontalAlignment="Right" TextWrapping="Wrap" VerticalAlignment="Center"><Run Language="fr-fr" Text="%"/></TextBlock>
											</Grid>
										</Border>
										<ControlTemplate.Triggers>
											<Trigger Property="IsEnabled" Value="false">
												<Setter Property="Opacity" TargetName="border" Value="0.56"/>
											</Trigger>
											<Trigger Property="IsMouseOver" Value="true">
												<Setter Property="BorderBrush" TargetName="border" Value="{StaticResource TextBox.MouseOver.Border}"/>
											</Trigger>
											<Trigger Property="IsKeyboardFocused" Value="true">
												<Setter Property="BorderBrush" TargetName="border" Value="{StaticResource TextBox.Focus.Border}"/>
											</Trigger>
										</ControlTemplate.Triggers>
									</ControlTemplate>
								</Setter.Value>
							</Setter>
							<Style.Triggers>
								<MultiTrigger>
									<MultiTrigger.Conditions>
										<Condition Property="IsInactiveSelectionHighlightEnabled" Value="true"/>
										<Condition Property="IsSelectionActive" Value="false"/>
									</MultiTrigger.Conditions>
									<Setter Property="SelectionBrush" Value="{DynamicResource {x:Static SystemColors.InactiveSelectionHighlightBrushKey}}"/>
								</MultiTrigger>
							</Style.Triggers>
						</Style>
					</TextBox.Resources>
				</TextBox>
				<TextBlock HorizontalAlignment="Center" TextWrapping="Wrap" Text="Zone de texte (TextBox) sans template" VerticalAlignment="Center" Margin="8,0"/>
			</StackPanel>
		</StackPanel>
		<StackPanel HorizontalAlignment="Center" VerticalAlignment="Center" Grid.Row="3">
			<StackPanel HorizontalAlignment="Center" VerticalAlignment="Center" Orientation="Horizontal" Margin="0,0,0,10">
				
				<ItemsControl ItemsSource="{Binding Main.Vehicules}" Width="160">
					<ItemsControl.Resources>
						<DataTemplate DataType="{x:Type vm:VeloViewModel}" >
							<Grid>
								<Grid.ColumnDefinitions>
									<ColumnDefinition Width="*"/>
									<ColumnDefinition Width="Auto"/>
								</Grid.ColumnDefinitions>
								<TextBlock TextWrapping="Wrap" Text="{Binding Nom}" VerticalAlignment="Center"/>
								<Image Height="32" Source="Images/bike.png" Width="32" VerticalAlignment="Center" Grid.Column="1"/>
							</Grid>
						</DataTemplate>
						<DataTemplate DataType="{x:Type vm:VoitureViewModel}" >
							<StackPanel Orientation="Horizontal">
								<Image Height="32" Source="Images/car.png"  Width="41" VerticalAlignment="Center"/>
								<TextBlock TextWrapping="Wrap" Text="{Binding Nom}" VerticalAlignment="Center"/>
							</StackPanel>
						</DataTemplate>
					</ItemsControl.Resources>
				</ItemsControl>

				<ed:RegularPolygon Height="127" InnerRadius="1" PointCount="6" Stretch="Fill" Stroke="Black" Width="28" Margin="-10,0,0,0">
					<ed:RegularPolygon.OpacityMask>
						<LinearGradientBrush EndPoint="0.998,0.473" StartPoint="0.022,0.472">
							<GradientStop Color="#00000000" Offset="0.53"/>
							<GradientStop Color="White" Offset="1"/>
							<GradientStop Color="#FF191919" Offset="0.537"/>
						</LinearGradientBrush>
					</ed:RegularPolygon.OpacityMask>
				</ed:RegularPolygon>
				<TextBlock HorizontalAlignment="Center" TextWrapping="Wrap" Text="ItemsControl avec template typé" VerticalAlignment="Center" Margin="8,0"/>
			</StackPanel>
		</StackPanel>

	</Grid>
</Window>
